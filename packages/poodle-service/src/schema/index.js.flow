/* @flow */

import {
  GraphQLSchema,
  GraphQLObjectType,
  GraphQLString,
} from 'graphql'

import Connection    from 'imap'
import * as imaputil from '../util/imap'
import * as box      from './box'

import typeof { Connection } from 'imap'

export default const schema = new GraphQLSchema({
  query: new GraphQLObjectType({
	name: 'RootQueryType',
	fields: {
	  box: {
		type: box.queryType,
		description: 'An individual mailbox on an IMAP server',
		args: {
		  attribute: {
			type: new GraphQLNonNull(GraphQLString),
			description: 'Find a box with a given attribute - e.g. `\\All`',
		  }
		},
		resolve(source, args, context) {
		  if (args.attribute) {
			return imaputil.openBox(
			  imaputil.boxByAttribute(args.attribute), true, conn
			)
		  }
		  // const conn: Connection = context.conn
		},
	  },
	},
  })
})
